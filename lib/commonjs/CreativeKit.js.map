{"version":3,"sources":["CreativeKit.ts"],"names":["CreativeKit","NativeModules"],"mappings":";;;;;;;AAAA;;AA2LA,MAAMA,WAA4B,GAAGC,2BAAcD,WAAnD","sourcesContent":["import { NativeModules } from 'react-native';\n\n/**\n * Interface that represents the optional sticker attributes.\n */\nexport interface StickerParams {\n  /**\n   * The width of the sticker.\n   */\n  width?: number;\n\n  /**\n   * The height of the sticker.\n   */\n  height?: number;\n\n  /**\n   * The x-coordinate position of the sticker.\n   */\n  posX?: number;\n\n  /**\n   * The rotation (degrees in clockwise direction) to apply on the sticker.\n   */\n  posY?: number;\n\n  /**\n   * The degrees to rotate the sticker clockwise direction.\n   */\n  rotationDegreesInClockwise?: number;\n\n  /**\n   * Enables animation for the sticker (iOS only).\n   */\n  isAnimated?: boolean;\n}\n\n/**\n * Base interface that represents the structure of params for each share type.\n */\nexport interface MetadataParams {\n  /**\n   * Optional sticker to attach to content.\n   */\n  sticker?: ImageData & StickerParams;\n\n  /**\n   * Optional caption to attach to content.\n   */\n  caption?: string;\n\n  /**\n   * Optional URL to attach to content.\n   */\n  attachmentUrl?: string;\n}\n\n/**\n * Type that represents the two supported image formats: raw (base64) and URI.\n */\nexport type ImageData = { raw: string } | { uri: string };\n\n/**\n * Interface that represents params needed for photo content.\n */\nexport interface PhotoContentParams extends MetadataParams {\n  /**\n   * The image data to be shared.\n   */\n  content: ImageData;\n}\n\n/**\n * Type that represents the supported video format: URI.\n */\nexport interface VideoData {\n  uri: string;\n}\n\n/**\n * Interface that represents params needed for video content.\n */\nexport interface VideoContentParams extends MetadataParams {\n  /**\n   * The video data to be shared.\n   */\n  content: VideoData;\n}\n\n/**\n * Interface that represents params needed for lens content.\n */\ninterface LensContentParams {\n  /**\n   * The UUID of the lens to be shared.\n   */\n  lensUUID: string;\n\n  /**\n   * Optional key-value pairs of additional launch data to attach to lens.\n   */\n  launchData?: Record<string, any>;\n\n  /**\n   * Optional caption to attach to content.\n   */\n  caption?: string;\n\n  /**\n   * Optional URL to attach to content.\n   */\n  attachmentUrl?: string;\n}\n\nexport type CreativeKitType = {\n  /**\n   * Shares a still image content to Snapchat preview.\n   *\n   * <pre>\n   *   CreativeKit.sharePhoto({\n   *    content: {\n   *      // add photo data\n   *    },\n   *    sticker: {\n   *      // optional sticker data\n   *    },\n   *    attachmentUrl: \"<optional URL to attach>\",\n   *    caption: \"<optional text to attach>\"\n   *   });\n   * </pre>\n   *\n   */\n  sharePhoto(photoContent: PhotoContentParams): Promise<void>;\n\n  /**\n   * Shares a video content to Snapchat preview.\n   *\n   * <pre>\n   *   CreativeKit.shareVideo({\n   *    content: {\n   *      // add video data\n   *    },\n   *    sticker: {\n   *      // optional sticker data\n   *    },\n   *    attachmentUrl: \"<optional URL to attach>\",\n   *    caption: \"<optional text to attach>\"\n   *   });\n   * </pre>\n   *\n   */\n  shareVideo(videoContent: VideoContentParams): Promise<void>;\n\n  /**\n   * Opens SnapChat camera with optional metadata.\n   *\n   * <pre>\n   *   CreativeKit.shareToCameraPreview({\n   *    sticker: {\n   *      // optional sticker data\n   *    },\n   *    attachmentUrl: \"<optional URL to attach>\",\n   *    caption: \"<optional text to attach>\"\n   *   });\n   * </pre>\n   *\n   */\n  shareToCameraPreview(metadata?: MetadataParams): Promise<void>;\n\n  /**\n   * Shares a lens attachment to Snapchat camera.\n   *\n   * <pre>\n   *   CreativeKit.shareLensToCameraPreview({\n   *    lensUUID: \"<UUID of lens>\",\n   *    launchData: {\n   *      // additional key-value attributes for the lens\n   *    }\n   *    attachmentUrl: \"<optional URL to attach>\",\n   *    caption: \"<optional text to attach>\"\n   *   });\n   * </pre>\n   *\n   */\n  shareLensToCameraPreview(lensContent: LensContentParams): Promise<void>;\n};\n\nconst CreativeKit: CreativeKitType = NativeModules.CreativeKit;\nexport { CreativeKit };\n"]}